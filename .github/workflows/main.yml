name: RDP

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP and Firewall
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall delete rule name="GitHub-RDP" 2>$null
          netsh advfirewall firewall add rule name="GitHub-RDP" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force

      - name: Create RDP User (expires in 30 days)
        run: |
          Add-Type -AssemblyName System.Web
          $password = [System.Web.Security.Membership]::GeneratePassword(16,3)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires:$false
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"

          $expireDate = (Get-Date).AddDays(30)
          net user RDP /expires:$($expireDate.ToString("MM/dd/yyyy"))

          echo "RDP_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "RDP_EXPIRE=$expireDate" | Out-File -FilePath $env:GITHUB_ENV -Append

      # --- Primary Tunnel: LocalXpose ---
      - name: Download LocalXpose
        run: |
          Invoke-WebRequest https://github.com/localxpose/localxpose/releases/download/v0.0.50/loclx-windows-amd64.zip -OutFile loclx.zip
          Expand-Archive loclx.zip -DestinationPath .
          Move-Item .\loclx.exe .\loclx\loclx.exe -Force

      - name: Start LocalXpose Tunnel
        run: |
          Start-Process -NoNewWindow -FilePath .\loclx\loclx.exe -ArgumentList "tcp --port 3389" -RedirectStandardOutput tunnel.log
          Start-Sleep -Seconds 15
          $output = Get-Content tunnel.log -Raw
          $addr = ($output -split "`n" | Select-String -Pattern "tcp://").ToString().Trim()
          if ($addr) {
            echo "TUNNEL_ADDR=$addr" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "TUNNEL_TYPE=LocalXpose" | Out-File -FilePath $env:GITHUB_ENV -Append
          }

      # --- Backup Tunnel: PageKite ---
      - name: Download PageKite
        if: env.TUNNEL_ADDR == ''
        run: |
          Invoke-WebRequest https://pagekite.net/pk/pagekite.py -OutFile pagekite.py
          python pagekite.py 3389 rdp-$(Get-Random -Maximum 99999).pagekite.me

      - name: Show RDP Credentials
        run: |
          Write-Host "============================="
          Write-Host "      RDP ACCESS DETAILS     "
          Write-Host "============================="
          if ($env:TUNNEL_TYPE -eq "LocalXpose") {
            Write-Host "Tunnel (LocalXpose): $env:TUNNEL_ADDR"
          } else {
            Write-Host "Tunnel (PageKite)   : rdp-XXXXX.pagekite.me:3389"
            Write-Host "âš  Replace XXXXX with the random ID shown by PageKite in logs"
          }
          Write-Host "Username   : RDP"
          Write-Host "Password   : $env:RDP_PASSWORD"
          Write-Host "Expires On : $env:RDP_EXPIRE"
          Write-Host "============================="

      - name: Keep Alive
        run: |
          Write-Host "RDP session active. Leave workflow running."
          while ($true) { Start-Sleep -Seconds 300 }
